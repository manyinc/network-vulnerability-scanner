import nmap
import time
def scan_host(self,ip_range, scan_speed, own_args):
    start_time = time.time()

    find_hosts = nmap.PortScanner()
    find_hosts.scan(hosts = ip_range, arguments=f'{scan_speed} -sn')

    host_list = []
    ip_dataset = []

    for host in find_hosts.all_hosts():
        host_list.append(host)

    self.progressbar.set(0)
    self.update()


    length_host = len(host_list)

    self.info_label("#ffcc00",f"◀ Found {length_host + 1} host's ▶")         
    self.progress_label("#ffcc00","◀ Step 2 of 6 ▶")
    progressbar_increase = 0.0
    progressbar_increase = 1 / (length_host + 1)
    progressbar_val = progressbar_increase
    self.progressbar.set(progressbar_val)
    self.update()

    for single_host in host_list:

        self.info_label("#ffcc00",f"◀ Scan Host : {single_host} ▶")         
        self.progress_label("#ffcc00","◀ Step 3 of 6 ▶")

        #single_host_start_time = time.time()
        find_hosts.scan(hosts=single_host, arguments=f'{scan_speed} {own_args}')

        progressbar_val = progressbar_val + progressbar_increase
        self.progressbar.set(progressbar_val)
        self.update()



        for host in find_hosts.all_hosts():
            vendor = "NULL"
            mac_adrr = "NULL"
            
            try:
                for mac_vendor in find_hosts[host]['vendor'].items():
                    mac_adrr = mac_vendor[0]
                    vendor = mac_vendor[1]
            except:
                vendor = "NULL"
                mac_adrr = "NULL"
                
            try:
                open_ports = []
                for port in find_hosts[host]['tcp'].items():
                    open_ports.append(port[0])
                multi_ip_list = {
                "host": host, 
                "port": open_ports,
                "vendor": vendor,
                "mac": mac_adrr
                }
                #single_host_end_time = time.time()
                #single_host_scan_time = single_host_end_time - single_host_start_time
                #print(f"{multi_ip_list} -> Scan completed in {single_host_scan_time:.2f} seconds.")

            except:

                multi_ip_list = {
                "host": host, 
                "port": "NULL",
                "vendor": vendor,
                "mac": mac_adrr                
                }
                #single_host_end_time = time.time()
                #single_host_scan_time = single_host_end_time - single_host_start_time
                #print(f"{multi_ip_list} -> Scan completed in {single_host_scan_time:.2f} seconds.")

            ip_dataset.append(multi_ip_list)

    end_time = time.time()
    scan_time = end_time - start_time
    print(f"Scan completed in {scan_time:.2f} seconds.")

    return ip_dataset
