import requests
from bs4 import BeautifulSoup
from time import sleep

def vulnerability_scan(self,open_ports,dataset):
    
    port_iter = 0
    for port in open_ports:
        num_of_open_ports = len(open_ports) - 1

        self.info_label("#ffcc00",f"◀ Scanning {port_iter + 1} of {num_of_open_ports} open ports ▶")

        self.progressbar.set(float(port_iter)/(num_of_open_ports))
        self.update()

        port_iter = port_iter + 1
        sleep(1)
        self.info_label("#ffcc00",f"◀ Scanning {port} ▶")

        url = f"https://nvd.nist.gov/vuln/search/results?form_type=Basic&results_type=overview&query={port}&search_type=last3months&isCpeNameSearch=false"
        response = requests.get(url)

        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            links = soup.find_all("a", attrs={"data-testid": lambda x: x and x.startswith("vuln-detail-link-")})
            
            for entry in links:
                cve_id = entry.text
                dataset = get_cve_info(cve_id,port,dataset)
                self.progress_label("#06c270",f"◀ Step 4 of 6 -> {cve_id} ▶")

    return dataset





def get_cve_info(cve_id,port,dataset):
    try:    
        thisvol = {
        "id":"",
        "description":"",
        "score":"",
        "port":"",
        "pubished":"",
        }

        url = f"https://nvd.nist.gov/vuln/detail/{cve_id}"
        response = requests.get(url)
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            
            thisvol["id"] = cve_id
            thisvol["port"] = port

            try:
                thisdict_score = soup.find("a", attrs={"id": "Cvss3NistCalculatorAnchor"})
                thisvol["score"] = thisdict_score.text        
            except:
                try:
                    thisdict_score = soup.find("a", attrs={"id": "Cvss3NistCalculatorAnchorNA"})
                    thisvol["score"] = thisdict_score.text 
                except:
                    try:
                        thisdict_score = soup.find("a", attrs={"id": "Cvss3CnaCalculatorAnchor"})
                        thisvol["score"] = thisdict_score.text 
                    except:
                        thisdict_score = soup.find("a", attrs={"id": "Cvss3CnaCalculatorAnchorNA"})
                        thisvol["score"] = thisdict_score.text 

            thisdict_pubished = soup.find("span", attrs={"data-testid": "vuln-published-on"})
            thisvol["pubished"] = thisdict_pubished.text
            thisdict_description = soup.find("p", attrs={"data-testid": "vuln-description"})
            thisvol["description"]  = thisdict_description.text
            dataset.append(thisvol)

            return dataset
        
        else:
            url = f"http://nvd.nist.gov/vuln/detail/{cve_id}"
            response = requests.get(url)

            if response.status_code == 200:
                soup = BeautifulSoup(response.text, 'html.parser')
                thisvol["id"] = cve_id
                thisvol["port"] = port

            try:
                thisdict_score = soup.find("a", attrs={"id": "Cvss3NistCalculatorAnchor"})
                thisvol["score"] = thisdict_score.text        
            except:
                try:
                    thisdict_score = soup.find("a", attrs={"id": "Cvss3NistCalculatorAnchorNA"})
                    thisvol["score"] = thisdict_score.text 
                except:
                    try:
                        thisdict_score = soup.find("a", attrs={"id": "Cvss3CnaCalculatorAnchor"})
                        thisvol["score"] = thisdict_score.text 
                    except:
                        thisdict_score = soup.find("a", attrs={"id": "Cvss3CnaCalculatorAnchorNA"})
                        thisvol["score"] = thisdict_score.text 

                thisdict_pubished = soup.find("span", attrs={"data-testid": "vuln-published-on"})
                thisvol["pubished"] = thisdict_pubished.text
                thisdict_description = soup.find("p", attrs={"data-testid": "vuln-description"})
                thisvol["description"]  = thisdict_description.text
                dataset.append(thisvol)

                return dataset

    except:
        thisvol["id"] = cve_id
        thisvol["port"] = port
        thisvol["description"]  = "The-program-encountered-a-problemn"
        dataset.append(thisvol)
        return dataset